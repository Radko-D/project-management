@{
    ViewData["Title"] = "Timeline Details";
    var timelineId = ViewBag.TimelineId;
}

<div id="timelineDetailsContainer">
    <div class="text-center">
        <i class="fas fa-spinner fa-spin"></i> Loading timeline details...
    </div>
</div>

<!-- Add Event Modal -->
<div class="modal fade" id="addEventModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Timeline Event</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addEventForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="eventTitle" class="form-label">Event Title *</label>
                        <input type="text" class="form-control" id="eventTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="eventDescription" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="eventDate" class="form-label">Event Date *</label>
                        <input type="date" class="form-control" id="eventDate" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Event</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const timelineId = @timelineId;
        let timeline = null;

        $(document).ready(function() {
            loadTimelineDetails();
            $('#addEventForm').on('submit', handleAddEvent);
        });

        function loadTimelineDetails() {
            api.get(`/timelines/${timelineId}`)
                .then(data => {
                    timeline = data;
                    displayTimelineDetails();
                    updateEventDateLimits();
                })
                .catch(error => {
                    console.error('Error loading timeline:', error);
                    $('#timelineDetailsContainer').html('<div class="alert alert-danger">Error loading timeline details</div>');
                });
        }

        function displayTimelineDetails() {
            const duration = Math.ceil((new Date(timeline.endDate) - new Date(timeline.startDate)) / (1000 * 60 * 60 * 24));
            const eventCount = timeline.events ? timeline.events.length : 0;
            const isActive = new Date() >= new Date(timeline.startDate) && new Date() <= new Date(timeline.endDate);
            const sortedEvents = timeline.events ? timeline.events.sort((a, b) => new Date(a.eventDate) - new Date(b.eventDate)) : [];
            
            const html = `
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h1><i class="fas fa-timeline"></i> ${timeline.name}</h1>
                                <p class="text-muted">${timeline.description || 'No description'}</p>
                                <div class="mb-2">
                                    <span class="badge ${isActive ? 'bg-success' : 'bg-secondary'} me-2">${isActive ? 'Active' : 'Inactive'}</span>
                                    <span class="badge bg-info">${duration} days</span>
                                    <span class="badge bg-warning ms-1">${eventCount} events</span>
                                </div>
                            </div>
                            <div>
                                <button class="btn btn-success me-2" data-bs-toggle="modal" data-bs-target="#addEventModal">
                                    <i class="fas fa-plus"></i> Add Event
                                </button>
                                <button class="btn btn-outline-primary me-2" onclick="editTimeline()">
                                    <i class="fas fa-edit"></i> Edit Timeline
                                </button>
                                <a href="/Timelines" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Back to Timelines
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5><i class="fas fa-info-circle"></i> Timeline Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <p><strong>Project:</strong></p>
                                        <p>
                                            <span class="badge bg-primary fs-6">${timeline.project?.name || 'Unknown Project'}</span>
                                        </p>
                                        
                                        <p><strong>Duration:</strong></p>
                                        <p>${duration} days</p>
                                        
                                        <p><strong>Status:</strong></p>
                                        <p>
                                            <span class="badge ${isActive ? 'bg-success' : 'bg-secondary'} fs-6">
                                                ${isActive ? 'Active' : 'Inactive'}
                                            </span>
                                        </p>
                                    </div>
                                    <div class="col-md-6">
                                        <p><strong>Start Date:</strong></p>
                                        <p>${formatDate(timeline.startDate)}</p>
                                        
                                        <p><strong>End Date:</strong></p>
                                        <p>${formatDate(timeline.endDate)}</p>
                                        
                                        <p><strong>Created:</strong></p>
                                        <p>${formatDateTime(timeline.createdAt)}</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5><i class="fas fa-calendar-alt"></i> Timeline Events</h5>
                                <span class="badge bg-info">${eventCount} events</span>
                            </div>
                            <div class="card-body">
                                ${eventCount > 0 ? displayTimelineEvents(sortedEvents) : '<p class="text-muted">No events added yet. <a href="#" data-bs-toggle="modal" data-bs-target="#addEventModal">Add the first event</a></p>'}
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5><i class="fas fa-chart-line"></i> Timeline Progress</h5>
                            </div>
                            <div class="card-body">
                                ${displayTimelineProgress()}
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h5><i class="fas fa-project-diagram"></i> Project Information</h5>
                            </div>
                            <div class="card-body">
                                ${timeline.project ? `
                                    <div class="mb-2">
                                        <strong>Name:</strong><br>
                                        <span class="badge bg-primary">${timeline.project.name}</span>
                                    </div>
                                    <div class="mb-2">
                                        <strong>Status:</strong><br>
                                        <span class="badge ${getStatusClass(timeline.project.status)}">${timeline.project.status}</span>
                                    </div>
                                    <div class="mb-2">
                                        <strong>Project Duration:</strong><br>
                                        ${formatDate(timeline.project.startDate)} - ${timeline.project.endDate ? formatDate(timeline.project.endDate) : 'Ongoing'}
                                    </div>
                                    <div class="mt-3">
                                        <a href="/Projects/Details/${timeline.project.id}" class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-eye"></i> View Project
                                        </a>
                                    </div>
                                ` : '<p class="text-muted">No project information available</p>'}
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            $('#timelineDetailsContainer').html(html);
        }

        function displayTimelineEvents(events) {
            if (!events || events.length === 0) {
                return '<p class="text-muted">No events found</p>';
            }

            let html = '<div class="timeline-container">';
            
            events.forEach((event, index) => {
                const eventDate = new Date(event.eventDate);
                const isPast = eventDate < new Date();
                const isToday = eventDate.toDateString() === new Date().toDateString();
                
                html += `
                    <div class="timeline-event ${isPast ? 'past' : ''} ${isToday ? 'today' : ''}">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">${event.title}</h6>
                                    <p class="text-muted mb-2">${event.description || 'No description'}</p>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> ${formatDate(event.eventDate)}
                                        ${isToday ? '<span class="badge bg-warning ms-2">Today</span>' : ''}
                                        ${isPast ? '<span class="badge bg-secondary ms-2">Past</span>' : ''}
                                    </small>
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#" onclick="editEvent(${event.id})"><i class="fas fa-edit"></i> Edit</a></li>
                                        <li><a class="dropdown-item text-danger" href="#" onclick="deleteEvent(${event.id})"><i class="fas fa-trash"></i> Delete</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            return html;
        }

        function displayTimelineProgress() {
            const now = new Date();
            const start = new Date(timeline.startDate);
            const end = new Date(timeline.endDate);
            const total = end - start;
            const elapsed = now - start;
            const progressPercent = Math.max(0, Math.min(100, (elapsed / total) * 100));
            
            const daysElapsed = Math.max(0, Math.floor(elapsed / (1000 * 60 * 60 * 24)));
            const daysRemaining = Math.max(0, Math.ceil((end - now) / (1000 * 60 * 60 * 24)));
            
            return `
                <div class="mb-3">
                    <div class="d-flex justify-content-between mb-1">
                        <small>Progress</small>
                        <small>${Math.round(progressPercent)}%</small>
                    </div>
                    <div class="progress">
                        <div class="progress-bar ${progressPercent >= 100 ? 'bg-success' : 'bg-primary'}" 
                             style="width: ${progressPercent}%"></div>
                    </div>
                </div>
                <div class="row text-center">
                    <div class="col-6">
                        <h4 class="text-primary">${daysElapsed}</h4>
                        <small>Days Elapsed</small>
                    </div>
                    <div class="col-6">
                        <h4 class="text-info">${daysRemaining}</h4>
                        <small>Days Remaining</small>
                    </div>
                </div>
            `;
        }

        function updateEventDateLimits() {
            if (timeline) {
                $('#eventDate').attr('min', timeline.startDate.split('T')[0]);
                $('#eventDate').attr('max', timeline.endDate.split('T')[0]);
            }
        }

        function handleAddEvent(e) {
            e.preventDefault();
            
            const eventData = {
                title: $('#eventTitle').val(),
                description: $('#eventDescription').val(),
                eventDate: $('#eventDate').val()
            };

            // Validate event date is within timeline bounds
            const eventDate = new Date(eventData.eventDate);
            const startDate = new Date(timeline.startDate);
            const endDate = new Date(timeline.endDate);
            
            if (eventDate < startDate || eventDate > endDate) {
                showAlert('Event date must be within timeline start and end dates', 'danger');
                return;
            }

            api.post(`/timelines/${timelineId}/events`, eventData)
                .then(data => {
                    $('#addEventModal').modal('hide');
                    $('#addEventForm')[0].reset();
                    loadTimelineDetails(); // Reload to show new event
                    showAlert('Event added successfully!', 'success');
                })
                .catch(error => {
                    console.error('Error adding event:', error);
                    showAlert('Error adding event', 'danger');
                });
        }

        function editTimeline() {
            window.location.href = `/Timelines/Edit/${timelineId}`;
        }

        function editEvent(eventId) {
            // For now, just show an alert. You could implement a full edit modal later
            showAlert('Event editing feature coming soon!', 'info');
        }

        function deleteEvent(eventId) {
            if (!confirm('Are you sure you want to delete this event?')) return;
            
            // Implementation would require a delete endpoint for timeline events
            showAlert('Event deletion feature coming soon!', 'info');
        }
    </script>

    <style>
        .timeline-container {
            position: relative;
            padding-left: 30px;
        }

        .timeline-container::before {
            content: '';
            position: absolute;
            left: 15px;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #007bff;
        }

        .timeline-event {
            position: relative;
            margin-bottom: 30px;
            padding-left: 25px;
        }

        .timeline-marker {
            position: absolute;
            left: -38px;
            top: 5px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #007bff;
            border: 3px solid #fff;
            box-shadow: 0 0 0 2px #007bff;
        }

        .timeline-event.past .timeline-marker {
            background: #6c757d;
            box-shadow: 0 0 0 2px #6c757d;
        }

        .timeline-event.today .timeline-marker {
            background: #ffc107;
            box-shadow: 0 0 0 2px #ffc107;
            animation: pulse 2s infinite;
        }

        .timeline-content {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid #007bff;
        }

        .timeline-event.past .timeline-content {
            border-left-color: #6c757d;
            opacity: 0.8;
        }

        .timeline-event.today .timeline-content {
            border-left-color: #ffc107;
            background: #fff3cd;
        }

        @@keyframes pulse {
            0% { box-shadow: 0 0 0 2px #ffc107; }
            50% { box-shadow: 0 0 0 6px rgba(255, 193, 7, 0.3); }
            100% { box-shadow: 0 0 0 2px #ffc107; }
        }
    </style>
}
