@{
    ViewData["Title"] = "Teams";
}

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1><i class="fas fa-users"></i> Teams</h1>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTeamModal">
                <i class="fas fa-plus"></i> New Team
            </button>
        </div>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <input type="text" id="searchTeams" class="form-control" placeholder="Search teams...">
    </div>
    <div class="col-md-6">
        <button class="btn btn-outline-primary w-100" onclick="loadTeams()">
            <i class="fas fa-sync-alt"></i> Refresh
        </button>
    </div>
</div>

<div id="teamsContainer">
    <div class="text-center">
        <i class="fas fa-spinner fa-spin"></i> Loading teams...
    </div>
</div>

<!-- Create Team Modal -->
<div class="modal fade" id="createTeamModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Team</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createTeamForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="teamName" class="form-label">Team Name</label>
                        <input type="text" class="form-control" id="teamName" required>
                    </div>
                    <div class="mb-3">
                        <label for="teamDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="teamDescription" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Team</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Member Modal -->
<div class="modal fade" id="addMemberModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Team Member</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addMemberForm">
                <div class="modal-body">
                    <input type="hidden" id="memberTeamId">
                    <div class="mb-3">
                        <label for="memberName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="memberName" required>
                    </div>
                    <div class="mb-3">
                        <label for="memberEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="memberEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="memberRole" class="form-label">Role</label>
                        <input type="text" class="form-control" id="memberRole" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Member</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let teams = [];

        $(document).ready(function() {
            loadTeams();
            
            $('#createTeamForm').on('submit', handleCreateTeam);
            $('#addMemberForm').on('submit', handleAddMember);
            $('#searchTeams').on('input', filterTeams);
        });

        function loadTeams() {
            api.get('/teams')
                .then(data => {
                    teams = data;
                    displayTeams(teams);
                })
                .catch(error => {
                    console.error('Error loading teams:', error);
                    $('#teamsContainer').html('<div class="alert alert-danger">Error loading teams</div>');
                });
        }

        function displayTeams(teamsToShow) {
            const container = $('#teamsContainer');
            
            if (teamsToShow.length === 0) {
                container.html('<div class="text-center"><p class="text-muted">No teams found</p></div>');
                return;
            }

            let html = '<div class="row">';
            teamsToShow.forEach(team => {
                const memberCount = team.teamMembers ? team.teamMembers.length : 0;
                const projectCount = team.projectTeams ? team.projectTeams.length : 0;
                
                html += `
                    <div class="col-md-6 col-lg-4 mb-3">
                        <div class="card h-100">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">${team.name}</h6>
                                <span class="badge bg-primary">${memberCount} members</span>
                            </div>
                            <div class="card-body">
                                <p class="card-text">${team.description || 'No description'}</p>
                                <div class="mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-project-diagram"></i> ${projectCount} projects
                                    </small>
                                </div>
                                <div class="mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> Created: ${formatDate(team.createdAt)}
                                    </small>
                                </div>
                                ${team.teamMembers && team.teamMembers.length > 0 ? `
                                    <div class="mb-2">
                                        <small class="text-muted">Members:</small>
                                        <div class="mt-1">
                                            ${team.teamMembers.slice(0, 3).map(member => 
                                                `<span class="badge bg-light text-dark me-1">${member.name}</span>`
                                            ).join('')}
                                            ${team.teamMembers.length > 3 ? `<span class="badge bg-secondary">+${team.teamMembers.length - 3} more</span>` : ''}
                                        </div>
                                    </div>
                                ` : ''}
                            </div>
                            <div class="card-footer">
                                <div class="btn-group w-100" role="group">
                                    <button class="btn btn-outline-success btn-sm" onclick="addMember(${team.id})">
                                        <i class="fas fa-user-plus"></i>
                                    </button>
                                    <button class="btn btn-outline-primary btn-sm" onclick="viewTeam(${team.id})">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary btn-sm" onclick="editTeam(${team.id})">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm" onclick="deleteTeam(${team.id})">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            html += '</div>';
            container.html(html);
        }

        function filterTeams() {
            const searchTerm = $('#searchTeams').val().toLowerCase();
            
            let filtered = teams.filter(team => {
                return team.name.toLowerCase().includes(searchTerm) || 
                       (team.description && team.description.toLowerCase().includes(searchTerm));
            });
            
            displayTeams(filtered);
        }

        function handleCreateTeam(e) {
            e.preventDefault();
            
            const teamData = {
                name: $('#teamName').val(),
                description: $('#teamDescription').val()
            };

            api.post('/teams', teamData)
                .then(data => {
                    $('#createTeamModal').modal('hide');
                    $('#createTeamForm')[0].reset();
                    loadTeams();
                    showAlert('Team created successfully!', 'success');
                })
                .catch(error => {
                    console.error('Error creating team:', error);
                    showAlert('Error creating team', 'danger');
                });
        }

        function addMember(teamId) {
            $('#memberTeamId').val(teamId);
            $('#addMemberModal').modal('show');
        }

        function handleAddMember(e) {
            e.preventDefault();
            
            const memberData = {
                name: $('#memberName').val(),
                email: $('#memberEmail').val(),
                role: $('#memberRole').val(),
                teamId: parseInt($('#memberTeamId').val())
            };

            api.post('/teams/members', memberData)
                .then(data => {
                    $('#addMemberModal').modal('hide');
                    $('#addMemberForm')[0].reset();
                    loadTeams();
                    showAlert('Member added successfully!', 'success');
                })
                .catch(error => {
                    console.error('Error adding member:', error);
                    showAlert('Error adding member', 'danger');
                });
        }

        function viewTeam(id) {
            window.location.href = `/Teams/Details/${id}`;
        }

        function editTeam(id) {
            window.location.href = `/Teams/Edit/${id}`;
        }

        function deleteTeam(id) {
            if (!confirm('Are you sure you want to delete this team?')) return;

            api.delete(`/teams/${id}`)
                .then(success => {
                    if (success) {
                        loadTeams();
                        showAlert('Team deleted successfully!', 'success');
                    }
                })
                .catch(error => {
                    console.error('Error deleting team:', error);
                    showAlert('Error deleting team', 'danger');
                });
        }
    </script>
}